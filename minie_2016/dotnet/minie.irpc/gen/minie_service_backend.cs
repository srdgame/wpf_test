// **********************************************************************
//
// Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.1
//
// <auto-generated>
//
// Generated from file `minie_service_backend.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace minie
{
    namespace irpc
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public sealed class BackendAuthHelper
        {
            public BackendAuthHelper(Ice.InputStream inS__)
            {
                _in = inS__;
                _pp = new IceInternal.ParamPatcher<minie.irpc.BackendAuth>("::minie::irpc::BackendAuth");
            }

            public static void write(Ice.OutputStream outS__, BackendAuth v__)
            {
                outS__.writeObject(v__);
            }

            public void read()
            {
                _in.readObject(_pp);
            }

            public minie.irpc.BackendAuth value
            {
                get
                {
                    return (minie.irpc.BackendAuth)_pp.value;
                }
            }

            public static Ice.OptionalFormat optionalFormat()
            {
                return Ice.OptionalFormat.Class;
            }

            private Ice.InputStream _in;
            private IceInternal.ParamPatcher<minie.irpc.BackendAuth> _pp;
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface BackendAuth : Ice.Object, BackendAuthOperations_, BackendAuthOperationsNC_
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public sealed class BackendServiceHelper
        {
            public BackendServiceHelper(Ice.InputStream inS__)
            {
                _in = inS__;
                _pp = new IceInternal.ParamPatcher<minie.irpc.BackendService>("::minie::irpc::BackendService");
            }

            public static void write(Ice.OutputStream outS__, BackendService v__)
            {
                outS__.writeObject(v__);
            }

            public void read()
            {
                _in.readObject(_pp);
            }

            public minie.irpc.BackendService value
            {
                get
                {
                    return (minie.irpc.BackendService)_pp.value;
                }
            }

            public static Ice.OptionalFormat optionalFormat()
            {
                return Ice.OptionalFormat.Class;
            }

            private Ice.InputStream _in;
            private IceInternal.ParamPatcher<minie.irpc.BackendService> _pp;
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
        public partial interface BackendService : Ice.Object, BackendServiceOperations_, BackendServiceOperationsNC_, minie.irpc.BaseService
        {
        }
    }
}

namespace minie
{
    namespace irpc
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendAuth_login_backend(minie.irpc.BackendServicePrx ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendAuth_login_backend_by_token(minie.irpc.BackendServicePrx ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_current_user_info(minie.irpc.sys_user_rpc ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_groups(_System.Collections.Generic.List<minie.irpc.sys_group_rpc> ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_nodes(_System.Collections.Generic.List<minie.irpc.cm_node_rpc> ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_node_categories(_System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_roles(_System.Collections.Generic.List<minie.irpc.sys_role_rpc> ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_permissions(_System.Collections.Generic.List<minie.irpc.sys_permission_rpc> ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_find_app_user(_System.Collections.Generic.List<minie.irpc.cm_user_rpc> ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_register_app_user_step1(bool ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_register_app_user_step2(minie.irpc.cm_user_rpc ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_user_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_role_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_role_user(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_user_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_role_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_role_user(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_sys_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_sys_user(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_cm_node(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_add_cm_entrance(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_update_sys_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_update_sys_user(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_update_cm_node(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_update_cm_entrance(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_sys_group(minie.irpc.sys_group_rpc ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_sys_user(minie.irpc.sys_user_rpc ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_cm_node(minie.irpc.cm_node_rpc ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_get_cm_entrance(minie.irpc.cm_entrance_rpc ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_sys_group(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_sys_user(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_cm_node(int ret__);

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public delegate void Callback_BackendService_remove_cm_entrance(int ret__);
    }
}

namespace minie
{
    namespace irpc
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public interface BackendAuthPrx : Ice.ObjectPrx
        {
            minie.irpc.BackendServicePrx login_backend(string un, string pw);
            minie.irpc.BackendServicePrx login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend> begin_login_backend(string un, string pw);
            Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend> begin_login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_login_backend(string un, string pw, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.BackendServicePrx end_login_backend(Ice.AsyncResult r__);

            minie.irpc.BackendServicePrx login_backend_by_token(string token);
            minie.irpc.BackendServicePrx login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend_by_token> begin_login_backend_by_token(string token);
            Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend_by_token> begin_login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_login_backend_by_token(string token, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.BackendServicePrx end_login_backend_by_token(Ice.AsyncResult r__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public interface BackendServicePrx : minie.irpc.BaseServicePrx
        {
            minie.irpc.sys_user_rpc get_current_user_info();
            minie.irpc.sys_user_rpc get_current_user_info(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_current_user_info> begin_get_current_user_info();
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_current_user_info> begin_get_current_user_info(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_current_user_info(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_current_user_info(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.sys_user_rpc end_get_current_user_info(Ice.AsyncResult r__);

            _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups();
            _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_groups> begin_get_groups();
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_groups> begin_get_groups(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_groups(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_groups(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            _System.Collections.Generic.List<minie.irpc.sys_group_rpc> end_get_groups(Ice.AsyncResult r__);

            _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes();
            _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_nodes> begin_get_nodes();
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_nodes> begin_get_nodes(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_nodes(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_nodes(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            _System.Collections.Generic.List<minie.irpc.cm_node_rpc> end_get_nodes(Ice.AsyncResult r__);

            _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories();
            _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_node_categories> begin_get_node_categories();
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_node_categories> begin_get_node_categories(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_node_categories(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_node_categories(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> end_get_node_categories(Ice.AsyncResult r__);

            _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles();
            _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_roles> begin_get_roles();
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_roles> begin_get_roles(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_roles(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_roles(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            _System.Collections.Generic.List<minie.irpc.sys_role_rpc> end_get_roles(Ice.AsyncResult r__);

            _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions();
            _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions(_System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_permissions> begin_get_permissions();
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_permissions> begin_get_permissions(_System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_permissions(Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_permissions(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> end_get_permissions(Ice.AsyncResult r__);

            _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords);
            _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_find_app_user> begin_find_app_user(string keywords);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_find_app_user> begin_find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_find_app_user(string keywords, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            _System.Collections.Generic.List<minie.irpc.cm_user_rpc> end_find_app_user(Ice.AsyncResult r__);

            bool register_app_user_step1(string cellphone);
            bool register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step1> begin_register_app_user_step1(string cellphone);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step1> begin_register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_register_app_user_step1(string cellphone, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            bool end_register_app_user_step1(Ice.AsyncResult r__);

            minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode);
            minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step2> begin_register_app_user_step2(string cellphone, string password, int verifyCode);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step2> begin_register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_register_app_user_step2(string cellphone, string password, int verifyCode, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.cm_user_rpc end_register_app_user_step2(Ice.AsyncResult r__);

            int add_user_group(string groupID, string userID);
            int add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_user_group> begin_add_user_group(string groupID, string userID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_user_group> begin_add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_user_group(string groupID, string userID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_user_group(Ice.AsyncResult r__);

            int add_role_group(string groupID, string roleID);
            int add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_group> begin_add_role_group(string groupID, string roleID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_group> begin_add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_role_group(string groupID, string roleID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_role_group(Ice.AsyncResult r__);

            int add_role_user(string userID, string roleID);
            int add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_user> begin_add_role_user(string userID, string roleID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_user> begin_add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_role_user(string userID, string roleID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_role_user(Ice.AsyncResult r__);

            int remove_user_group(string groupID, string userID);
            int remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_user_group> begin_remove_user_group(string groupID, string userID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_user_group> begin_remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_user_group(string groupID, string userID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_user_group(Ice.AsyncResult r__);

            int remove_role_group(string groupID, string roleID);
            int remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_group> begin_remove_role_group(string groupID, string roleID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_group> begin_remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_role_group(string groupID, string roleID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_role_group(Ice.AsyncResult r__);

            int remove_role_user(string userID, string roleID);
            int remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_user> begin_remove_role_user(string userID, string roleID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_user> begin_remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_role_user(string userID, string roleID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_role_user(Ice.AsyncResult r__);

            int add_sys_group(minie.irpc.sys_group_rpc group);
            int add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_group> begin_add_sys_group(minie.irpc.sys_group_rpc group);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_group> begin_add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_sys_group(minie.irpc.sys_group_rpc group, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_sys_group(Ice.AsyncResult r__);

            int add_sys_user(minie.irpc.sys_user_rpc user);
            int add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_user> begin_add_sys_user(minie.irpc.sys_user_rpc user);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_user> begin_add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_sys_user(minie.irpc.sys_user_rpc user, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_sys_user(Ice.AsyncResult r__);

            int add_cm_node(minie.irpc.cm_node_rpc node);
            int add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_node> begin_add_cm_node(minie.irpc.cm_node_rpc node);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_node> begin_add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_cm_node(minie.irpc.cm_node_rpc node, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_cm_node(Ice.AsyncResult r__);

            int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance);
            int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_entrance> begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_entrance> begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_add_cm_entrance(Ice.AsyncResult r__);

            int update_sys_group(minie.irpc.sys_group_rpc group);
            int update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_group> begin_update_sys_group(minie.irpc.sys_group_rpc group);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_group> begin_update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_update_sys_group(minie.irpc.sys_group_rpc group, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_update_sys_group(Ice.AsyncResult r__);

            int update_sys_user(minie.irpc.sys_user_rpc user);
            int update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_user> begin_update_sys_user(minie.irpc.sys_user_rpc user);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_user> begin_update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_update_sys_user(minie.irpc.sys_user_rpc user, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_update_sys_user(Ice.AsyncResult r__);

            int update_cm_node(minie.irpc.cm_node_rpc node);
            int update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_node> begin_update_cm_node(minie.irpc.cm_node_rpc node);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_node> begin_update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_update_cm_node(minie.irpc.cm_node_rpc node, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_update_cm_node(Ice.AsyncResult r__);

            int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance);
            int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_entrance> begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_entrance> begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_update_cm_entrance(Ice.AsyncResult r__);

            minie.irpc.sys_group_rpc get_sys_group(string groupID);
            minie.irpc.sys_group_rpc get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_group> begin_get_sys_group(string groupID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_group> begin_get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_sys_group(string groupID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.sys_group_rpc end_get_sys_group(Ice.AsyncResult r__);

            minie.irpc.sys_user_rpc get_sys_user(string userID);
            minie.irpc.sys_user_rpc get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_user> begin_get_sys_user(string userID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_user> begin_get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_sys_user(string userID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.sys_user_rpc end_get_sys_user(Ice.AsyncResult r__);

            minie.irpc.cm_node_rpc get_cm_node(string nodeID);
            minie.irpc.cm_node_rpc get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_node> begin_get_cm_node(string nodeID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_node> begin_get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_cm_node(string nodeID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.cm_node_rpc end_get_cm_node(Ice.AsyncResult r__);

            minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID);
            minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_entrance> begin_get_cm_entrance(string entranceID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_entrance> begin_get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_get_cm_entrance(string entranceID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            minie.irpc.cm_entrance_rpc end_get_cm_entrance(Ice.AsyncResult r__);

            int remove_sys_group(string groupID);
            int remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_group> begin_remove_sys_group(string groupID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_group> begin_remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_sys_group(string groupID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_sys_group(Ice.AsyncResult r__);

            int remove_sys_user(string userID);
            int remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_user> begin_remove_sys_user(string userID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_user> begin_remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_sys_user(string userID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_sys_user(Ice.AsyncResult r__);

            int remove_cm_node(string nodeID);
            int remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_node> begin_remove_cm_node(string nodeID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_node> begin_remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_cm_node(string nodeID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_cm_node(Ice.AsyncResult r__);

            int remove_cm_entrance(string entranceID);
            int remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> context__);

            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_entrance> begin_remove_cm_entrance(string entranceID);
            Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_entrance> begin_remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__);

            Ice.AsyncResult begin_remove_cm_entrance(string entranceID, Ice.AsyncCallback cb__, object cookie__);
            Ice.AsyncResult begin_remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

            int end_remove_cm_entrance(Ice.AsyncResult r__);
        }
    }
}

namespace minie
{
    namespace irpc
    {
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public interface BackendAuthOperations_
        {
            minie.irpc.BackendServicePrx login_backend(string un, string pw, Ice.Current current__);

            minie.irpc.BackendServicePrx login_backend_by_token(string token, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public interface BackendAuthOperationsNC_
        {
            minie.irpc.BackendServicePrx login_backend(string un, string pw);

            minie.irpc.BackendServicePrx login_backend_by_token(string token);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public interface BackendServiceOperations_ : minie.irpc.BaseServiceOperations_
        {
            minie.irpc.sys_user_rpc get_current_user_info(Ice.Current current__);

            _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups(Ice.Current current__);

            _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes(Ice.Current current__);

            _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories(Ice.Current current__);

            _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles(Ice.Current current__);

            _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions(Ice.Current current__);

            _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords, Ice.Current current__);

            bool register_app_user_step1(string cellphone, Ice.Current current__);

            minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode, Ice.Current current__);

            int add_user_group(string groupID, string userID, Ice.Current current__);

            int add_role_group(string groupID, string roleID, Ice.Current current__);

            int add_role_user(string userID, string roleID, Ice.Current current__);

            int remove_user_group(string groupID, string userID, Ice.Current current__);

            int remove_role_group(string groupID, string roleID, Ice.Current current__);

            int remove_role_user(string userID, string roleID, Ice.Current current__);

            int add_sys_group(minie.irpc.sys_group_rpc group, Ice.Current current__);

            int add_sys_user(minie.irpc.sys_user_rpc user, Ice.Current current__);

            int add_cm_node(minie.irpc.cm_node_rpc node, Ice.Current current__);

            int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.Current current__);

            int update_sys_group(minie.irpc.sys_group_rpc group, Ice.Current current__);

            int update_sys_user(minie.irpc.sys_user_rpc user, Ice.Current current__);

            int update_cm_node(minie.irpc.cm_node_rpc node, Ice.Current current__);

            int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.Current current__);

            minie.irpc.sys_group_rpc get_sys_group(string groupID, Ice.Current current__);

            minie.irpc.sys_user_rpc get_sys_user(string userID, Ice.Current current__);

            minie.irpc.cm_node_rpc get_cm_node(string nodeID, Ice.Current current__);

            minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID, Ice.Current current__);

            int remove_sys_group(string groupID, Ice.Current current__);

            int remove_sys_user(string userID, Ice.Current current__);

            int remove_cm_node(string nodeID, Ice.Current current__);

            int remove_cm_entrance(string entranceID, Ice.Current current__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public interface BackendServiceOperationsNC_ : minie.irpc.BaseServiceOperationsNC_
        {
            minie.irpc.sys_user_rpc get_current_user_info();

            _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups();

            _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes();

            _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories();

            _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles();

            _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions();

            _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords);

            bool register_app_user_step1(string cellphone);

            minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode);

            int add_user_group(string groupID, string userID);

            int add_role_group(string groupID, string roleID);

            int add_role_user(string userID, string roleID);

            int remove_user_group(string groupID, string userID);

            int remove_role_group(string groupID, string roleID);

            int remove_role_user(string userID, string roleID);

            int add_sys_group(minie.irpc.sys_group_rpc group);

            int add_sys_user(minie.irpc.sys_user_rpc user);

            int add_cm_node(minie.irpc.cm_node_rpc node);

            int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance);

            int update_sys_group(minie.irpc.sys_group_rpc group);

            int update_sys_user(minie.irpc.sys_user_rpc user);

            int update_cm_node(minie.irpc.cm_node_rpc node);

            int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance);

            minie.irpc.sys_group_rpc get_sys_group(string groupID);

            minie.irpc.sys_user_rpc get_sys_user(string userID);

            minie.irpc.cm_node_rpc get_cm_node(string nodeID);

            minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID);

            int remove_sys_group(string groupID);

            int remove_sys_user(string userID);

            int remove_cm_node(string nodeID);

            int remove_cm_entrance(string entranceID);
        }
    }
}

namespace minie
{
    namespace irpc
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public sealed class BackendAuthPrxHelper : Ice.ObjectPrxHelperBase, BackendAuthPrx
        {
            #region Synchronous operations

            public minie.irpc.BackendServicePrx login_backend(string un, string pw)
            {
                return this.login_backend(un, pw, null, false);
            }

            public minie.irpc.BackendServicePrx login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.login_backend(un, pw, context__, true);
            }

            private minie.irpc.BackendServicePrx login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__login_backend_name);
                return end_login_backend(begin_login_backend(un, pw, context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.BackendServicePrx login_backend_by_token(string token)
            {
                return this.login_backend_by_token(token, null, false);
            }

            public minie.irpc.BackendServicePrx login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.login_backend_by_token(token, context__, true);
            }

            private minie.irpc.BackendServicePrx login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__login_backend_by_token_name);
                return end_login_backend_by_token(begin_login_backend_by_token(token, context__, explicitCtx__, true, null, null));
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend> begin_login_backend(string un, string pw)
            {
                return begin_login_backend(un, pw, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend> begin_login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_login_backend(un, pw, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_login_backend(string un, string pw, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_login_backend(un, pw, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_login_backend(un, pw, ctx__, true, false, cb__, cookie__);
            }

            private const string __login_backend_name = "login_backend";

            public minie.irpc.BackendServicePrx end_login_backend(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __login_backend_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(minie.irpc.AuthError)
                        {
                            throw;
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.BackendServicePrx ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.BackendServicePrxHelper.read__(is__);
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend> begin_login_backend(string un, string pw, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__login_backend_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendAuth_login_backend> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendAuth_login_backend>(__login_backend_name, login_backend_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__login_backend_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(un);
                    os__.writeString(pw);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void login_backend_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendAuth_login_backend cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.BackendServicePrx ret__;
                try
                {
                    ret__ = end_login_backend(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend_by_token> begin_login_backend_by_token(string token)
            {
                return begin_login_backend_by_token(token, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend_by_token> begin_login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_login_backend_by_token(token, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_login_backend_by_token(string token, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_login_backend_by_token(token, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_login_backend_by_token(token, ctx__, true, false, cb__, cookie__);
            }

            private const string __login_backend_by_token_name = "login_backend_by_token";

            public minie.irpc.BackendServicePrx end_login_backend_by_token(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __login_backend_by_token_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(minie.irpc.AuthError)
                        {
                            throw;
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.BackendServicePrx ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.BackendServicePrxHelper.read__(is__);
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendAuth_login_backend_by_token> begin_login_backend_by_token(string token, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__login_backend_by_token_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendAuth_login_backend_by_token> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendAuth_login_backend_by_token>(__login_backend_by_token_name, login_backend_by_token_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__login_backend_by_token_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(token);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void login_backend_by_token_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendAuth_login_backend_by_token cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.BackendServicePrx ret__;
                try
                {
                    ret__ = end_login_backend_by_token(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static BackendAuthPrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                BackendAuthPrx r = b as BackendAuthPrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    BackendAuthPrxHelper h = new BackendAuthPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static BackendAuthPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                BackendAuthPrx r = b as BackendAuthPrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    BackendAuthPrxHelper h = new BackendAuthPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static BackendAuthPrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        BackendAuthPrxHelper h = new BackendAuthPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static BackendAuthPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        BackendAuthPrxHelper h = new BackendAuthPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static BackendAuthPrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                BackendAuthPrx r = b as BackendAuthPrx;
                if(r == null)
                {
                    BackendAuthPrxHelper h = new BackendAuthPrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static BackendAuthPrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                BackendAuthPrxHelper h = new BackendAuthPrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::minie::irpc::BackendAuth"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            public static void write__(IceInternal.BasicStream os__, BackendAuthPrx v__)
            {
                os__.writeProxy(v__);
            }

            public static BackendAuthPrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    BackendAuthPrxHelper result = new BackendAuthPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            public static void write(Ice.OutputStream outS__, BackendAuthPrx v__)
            {
                outS__.writeProxy(v__);
            }

            public static BackendAuthPrx read(Ice.InputStream inS__)
            {
                Ice.ObjectPrx proxy = inS__.readProxy();
                if(proxy != null)
                {
                    BackendAuthPrxHelper result = new BackendAuthPrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            public static Ice.OptionalFormat optionalFormat()
            {
                return Ice.OptionalFormat.FSize;
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public sealed class BackendServicePrxHelper : Ice.ObjectPrxHelperBase, BackendServicePrx
        {
            #region Synchronous operations

            public int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance)
            {
                return this.add_cm_entrance(entrance, null, false);
            }

            public int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_cm_entrance(entrance, context__, true);
            }

            private int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_cm_entrance_name);
                return end_add_cm_entrance(begin_add_cm_entrance(entrance, context__, explicitCtx__, true, null, null));
            }

            public int add_cm_node(minie.irpc.cm_node_rpc node)
            {
                return this.add_cm_node(node, null, false);
            }

            public int add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_cm_node(node, context__, true);
            }

            private int add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_cm_node_name);
                return end_add_cm_node(begin_add_cm_node(node, context__, explicitCtx__, true, null, null));
            }

            public int add_role_group(string groupID, string roleID)
            {
                return this.add_role_group(groupID, roleID, null, false);
            }

            public int add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_role_group(groupID, roleID, context__, true);
            }

            private int add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_role_group_name);
                return end_add_role_group(begin_add_role_group(groupID, roleID, context__, explicitCtx__, true, null, null));
            }

            public int add_role_user(string userID, string roleID)
            {
                return this.add_role_user(userID, roleID, null, false);
            }

            public int add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_role_user(userID, roleID, context__, true);
            }

            private int add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_role_user_name);
                return end_add_role_user(begin_add_role_user(userID, roleID, context__, explicitCtx__, true, null, null));
            }

            public int add_sys_group(minie.irpc.sys_group_rpc group)
            {
                return this.add_sys_group(group, null, false);
            }

            public int add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_sys_group(group, context__, true);
            }

            private int add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_sys_group_name);
                return end_add_sys_group(begin_add_sys_group(group, context__, explicitCtx__, true, null, null));
            }

            public int add_sys_user(minie.irpc.sys_user_rpc user)
            {
                return this.add_sys_user(user, null, false);
            }

            public int add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_sys_user(user, context__, true);
            }

            private int add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_sys_user_name);
                return end_add_sys_user(begin_add_sys_user(user, context__, explicitCtx__, true, null, null));
            }

            public int add_user_group(string groupID, string userID)
            {
                return this.add_user_group(groupID, userID, null, false);
            }

            public int add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.add_user_group(groupID, userID, context__, true);
            }

            private int add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__add_user_group_name);
                return end_add_user_group(begin_add_user_group(groupID, userID, context__, explicitCtx__, true, null, null));
            }

            public _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords)
            {
                return this.find_app_user(keywords, null, false);
            }

            public _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.find_app_user(keywords, context__, true);
            }

            private _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__find_app_user_name);
                return end_find_app_user(begin_find_app_user(keywords, context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID)
            {
                return this.get_cm_entrance(entranceID, null, false);
            }

            public minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_cm_entrance(entranceID, context__, true);
            }

            private minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_cm_entrance_name);
                return end_get_cm_entrance(begin_get_cm_entrance(entranceID, context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.cm_node_rpc get_cm_node(string nodeID)
            {
                return this.get_cm_node(nodeID, null, false);
            }

            public minie.irpc.cm_node_rpc get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_cm_node(nodeID, context__, true);
            }

            private minie.irpc.cm_node_rpc get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_cm_node_name);
                return end_get_cm_node(begin_get_cm_node(nodeID, context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.sys_user_rpc get_current_user_info()
            {
                return this.get_current_user_info(null, false);
            }

            public minie.irpc.sys_user_rpc get_current_user_info(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_current_user_info(context__, true);
            }

            private minie.irpc.sys_user_rpc get_current_user_info(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_current_user_info_name);
                return end_get_current_user_info(begin_get_current_user_info(context__, explicitCtx__, true, null, null));
            }

            public _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups()
            {
                return this.get_groups(null, false);
            }

            public _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_groups(context__, true);
            }

            private _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_groups_name);
                return end_get_groups(begin_get_groups(context__, explicitCtx__, true, null, null));
            }

            public _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories()
            {
                return this.get_node_categories(null, false);
            }

            public _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_node_categories(context__, true);
            }

            private _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_node_categories_name);
                return end_get_node_categories(begin_get_node_categories(context__, explicitCtx__, true, null, null));
            }

            public _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes()
            {
                return this.get_nodes(null, false);
            }

            public _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_nodes(context__, true);
            }

            private _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_nodes_name);
                return end_get_nodes(begin_get_nodes(context__, explicitCtx__, true, null, null));
            }

            public _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions()
            {
                return this.get_permissions(null, false);
            }

            public _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_permissions(context__, true);
            }

            private _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_permissions_name);
                return end_get_permissions(begin_get_permissions(context__, explicitCtx__, true, null, null));
            }

            public _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles()
            {
                return this.get_roles(null, false);
            }

            public _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_roles(context__, true);
            }

            private _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_roles_name);
                return end_get_roles(begin_get_roles(context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.sys_group_rpc get_sys_group(string groupID)
            {
                return this.get_sys_group(groupID, null, false);
            }

            public minie.irpc.sys_group_rpc get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_sys_group(groupID, context__, true);
            }

            private minie.irpc.sys_group_rpc get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_sys_group_name);
                return end_get_sys_group(begin_get_sys_group(groupID, context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.sys_user_rpc get_sys_user(string userID)
            {
                return this.get_sys_user(userID, null, false);
            }

            public minie.irpc.sys_user_rpc get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.get_sys_user(userID, context__, true);
            }

            private minie.irpc.sys_user_rpc get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__get_sys_user_name);
                return end_get_sys_user(begin_get_sys_user(userID, context__, explicitCtx__, true, null, null));
            }

            public bool register_app_user_step1(string cellphone)
            {
                return this.register_app_user_step1(cellphone, null, false);
            }

            public bool register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.register_app_user_step1(cellphone, context__, true);
            }

            private bool register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__register_app_user_step1_name);
                return end_register_app_user_step1(begin_register_app_user_step1(cellphone, context__, explicitCtx__, true, null, null));
            }

            public minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode)
            {
                return this.register_app_user_step2(cellphone, password, verifyCode, null, false);
            }

            public minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.register_app_user_step2(cellphone, password, verifyCode, context__, true);
            }

            private minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__register_app_user_step2_name);
                return end_register_app_user_step2(begin_register_app_user_step2(cellphone, password, verifyCode, context__, explicitCtx__, true, null, null));
            }

            public int remove_cm_entrance(string entranceID)
            {
                return this.remove_cm_entrance(entranceID, null, false);
            }

            public int remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_cm_entrance(entranceID, context__, true);
            }

            private int remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_cm_entrance_name);
                return end_remove_cm_entrance(begin_remove_cm_entrance(entranceID, context__, explicitCtx__, true, null, null));
            }

            public int remove_cm_node(string nodeID)
            {
                return this.remove_cm_node(nodeID, null, false);
            }

            public int remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_cm_node(nodeID, context__, true);
            }

            private int remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_cm_node_name);
                return end_remove_cm_node(begin_remove_cm_node(nodeID, context__, explicitCtx__, true, null, null));
            }

            public int remove_role_group(string groupID, string roleID)
            {
                return this.remove_role_group(groupID, roleID, null, false);
            }

            public int remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_role_group(groupID, roleID, context__, true);
            }

            private int remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_role_group_name);
                return end_remove_role_group(begin_remove_role_group(groupID, roleID, context__, explicitCtx__, true, null, null));
            }

            public int remove_role_user(string userID, string roleID)
            {
                return this.remove_role_user(userID, roleID, null, false);
            }

            public int remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_role_user(userID, roleID, context__, true);
            }

            private int remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_role_user_name);
                return end_remove_role_user(begin_remove_role_user(userID, roleID, context__, explicitCtx__, true, null, null));
            }

            public int remove_sys_group(string groupID)
            {
                return this.remove_sys_group(groupID, null, false);
            }

            public int remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_sys_group(groupID, context__, true);
            }

            private int remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_sys_group_name);
                return end_remove_sys_group(begin_remove_sys_group(groupID, context__, explicitCtx__, true, null, null));
            }

            public int remove_sys_user(string userID)
            {
                return this.remove_sys_user(userID, null, false);
            }

            public int remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_sys_user(userID, context__, true);
            }

            private int remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_sys_user_name);
                return end_remove_sys_user(begin_remove_sys_user(userID, context__, explicitCtx__, true, null, null));
            }

            public int remove_user_group(string groupID, string userID)
            {
                return this.remove_user_group(groupID, userID, null, false);
            }

            public int remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.remove_user_group(groupID, userID, context__, true);
            }

            private int remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__remove_user_group_name);
                return end_remove_user_group(begin_remove_user_group(groupID, userID, context__, explicitCtx__, true, null, null));
            }

            public int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance)
            {
                return this.update_cm_entrance(entrance, null, false);
            }

            public int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.update_cm_entrance(entrance, context__, true);
            }

            private int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__update_cm_entrance_name);
                return end_update_cm_entrance(begin_update_cm_entrance(entrance, context__, explicitCtx__, true, null, null));
            }

            public int update_cm_node(minie.irpc.cm_node_rpc node)
            {
                return this.update_cm_node(node, null, false);
            }

            public int update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.update_cm_node(node, context__, true);
            }

            private int update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__update_cm_node_name);
                return end_update_cm_node(begin_update_cm_node(node, context__, explicitCtx__, true, null, null));
            }

            public int update_sys_group(minie.irpc.sys_group_rpc group)
            {
                return this.update_sys_group(group, null, false);
            }

            public int update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.update_sys_group(group, context__, true);
            }

            private int update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__update_sys_group_name);
                return end_update_sys_group(begin_update_sys_group(group, context__, explicitCtx__, true, null, null));
            }

            public int update_sys_user(minie.irpc.sys_user_rpc user)
            {
                return this.update_sys_user(user, null, false);
            }

            public int update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> context__)
            {
                return this.update_sys_user(user, context__, true);
            }

            private int update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                checkTwowayOnly__(__update_sys_user_name);
                return end_update_sys_user(begin_update_sys_user(user, context__, explicitCtx__, true, null, null));
            }

            public void logout()
            {
                this.logout(null, false);
            }

            public void logout(_System.Collections.Generic.Dictionary<string, string> context__)
            {
                this.logout(context__, true);
            }

            private void logout(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
            {
                end_logout(begin_logout(context__, explicitCtx__, true, null, null));
            }

            #endregion

            #region Asynchronous operations

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_entrance> begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance)
            {
                return begin_add_cm_entrance(entrance, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_entrance> begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_cm_entrance(entrance, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_cm_entrance(entrance, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_cm_entrance(entrance, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_cm_entrance_name = "add_cm_entrance";

            public int end_add_cm_entrance(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_cm_entrance_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_entrance> begin_add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_cm_entrance_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_cm_entrance> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_cm_entrance>(__add_cm_entrance_name, add_cm_entrance_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_cm_entrance_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(entrance);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_cm_entrance_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_cm_entrance cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_cm_entrance(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_node> begin_add_cm_node(minie.irpc.cm_node_rpc node)
            {
                return begin_add_cm_node(node, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_node> begin_add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_cm_node(node, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_cm_node(minie.irpc.cm_node_rpc node, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_cm_node(node, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_cm_node(node, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_cm_node_name = "add_cm_node";

            public int end_add_cm_node(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_cm_node_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_cm_node> begin_add_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_cm_node_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_cm_node> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_cm_node>(__add_cm_node_name, add_cm_node_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_cm_node_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(node);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_cm_node_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_cm_node cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_cm_node(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_group> begin_add_role_group(string groupID, string roleID)
            {
                return begin_add_role_group(groupID, roleID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_group> begin_add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_role_group(groupID, roleID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_role_group(string groupID, string roleID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_role_group(groupID, roleID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_role_group(groupID, roleID, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_role_group_name = "add_role_group";

            public int end_add_role_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_role_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_group> begin_add_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_role_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_role_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_role_group>(__add_role_group_name, add_role_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_role_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(groupID);
                    os__.writeString(roleID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_role_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_role_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_role_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_user> begin_add_role_user(string userID, string roleID)
            {
                return begin_add_role_user(userID, roleID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_user> begin_add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_role_user(userID, roleID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_role_user(string userID, string roleID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_role_user(userID, roleID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_role_user(userID, roleID, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_role_user_name = "add_role_user";

            public int end_add_role_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_role_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_role_user> begin_add_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_role_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_role_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_role_user>(__add_role_user_name, add_role_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_role_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(userID);
                    os__.writeString(roleID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_role_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_role_user cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_role_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_group> begin_add_sys_group(minie.irpc.sys_group_rpc group)
            {
                return begin_add_sys_group(group, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_group> begin_add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_sys_group(group, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_sys_group(minie.irpc.sys_group_rpc group, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_sys_group(group, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_sys_group(group, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_sys_group_name = "add_sys_group";

            public int end_add_sys_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_sys_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_group> begin_add_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_sys_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_sys_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_sys_group>(__add_sys_group_name, add_sys_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_sys_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(group);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_sys_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_sys_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_sys_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_user> begin_add_sys_user(minie.irpc.sys_user_rpc user)
            {
                return begin_add_sys_user(user, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_user> begin_add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_sys_user(user, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_sys_user(minie.irpc.sys_user_rpc user, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_sys_user(user, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_sys_user(user, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_sys_user_name = "add_sys_user";

            public int end_add_sys_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_sys_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_sys_user> begin_add_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_sys_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_sys_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_sys_user>(__add_sys_user_name, add_sys_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_sys_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(user);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_sys_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_sys_user cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_sys_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_user_group> begin_add_user_group(string groupID, string userID)
            {
                return begin_add_user_group(groupID, userID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_add_user_group> begin_add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_add_user_group(groupID, userID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_add_user_group(string groupID, string userID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_user_group(groupID, userID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_add_user_group(groupID, userID, ctx__, true, false, cb__, cookie__);
            }

            private const string __add_user_group_name = "add_user_group";

            public int end_add_user_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __add_user_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_add_user_group> begin_add_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__add_user_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_user_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_add_user_group>(__add_user_group_name, add_user_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__add_user_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(groupID);
                    os__.writeString(userID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void add_user_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_add_user_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_add_user_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_find_app_user> begin_find_app_user(string keywords)
            {
                return begin_find_app_user(keywords, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_find_app_user> begin_find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_find_app_user(keywords, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_find_app_user(string keywords, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_find_app_user(keywords, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_find_app_user(keywords, ctx__, true, false, cb__, cookie__);
            }

            private const string __find_app_user_name = "find_app_user";

            public _System.Collections.Generic.List<minie.irpc.cm_user_rpc> end_find_app_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __find_app_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    _System.Collections.Generic.List<minie.irpc.cm_user_rpc> ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.cm_user_rpc_listHelper.read(is__);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_find_app_user> begin_find_app_user(string keywords, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__find_app_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_find_app_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_find_app_user>(__find_app_user_name, find_app_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__find_app_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(keywords);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void find_app_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_find_app_user cb__, Ice.ExceptionCallback excb__)
            {
                _System.Collections.Generic.List<minie.irpc.cm_user_rpc> ret__;
                try
                {
                    ret__ = end_find_app_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_entrance> begin_get_cm_entrance(string entranceID)
            {
                return begin_get_cm_entrance(entranceID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_entrance> begin_get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_cm_entrance(entranceID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_cm_entrance(string entranceID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_cm_entrance(entranceID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_cm_entrance(entranceID, ctx__, true, false, cb__, cookie__);
            }

            private const string __get_cm_entrance_name = "get_cm_entrance";

            public minie.irpc.cm_entrance_rpc end_get_cm_entrance(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_cm_entrance_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.cm_entrance_rpc ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    IceInternal.ParamPatcher<minie.irpc.cm_entrance_rpc> ret__PP = new IceInternal.ParamPatcher<minie.irpc.cm_entrance_rpc>(minie.irpc.cm_entrance_rpc.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_entrance> begin_get_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_cm_entrance_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_cm_entrance> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_cm_entrance>(__get_cm_entrance_name, get_cm_entrance_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_cm_entrance_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(entranceID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_cm_entrance_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_cm_entrance cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.cm_entrance_rpc ret__;
                try
                {
                    ret__ = end_get_cm_entrance(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_node> begin_get_cm_node(string nodeID)
            {
                return begin_get_cm_node(nodeID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_node> begin_get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_cm_node(nodeID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_cm_node(string nodeID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_cm_node(nodeID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_cm_node(nodeID, ctx__, true, false, cb__, cookie__);
            }

            private const string __get_cm_node_name = "get_cm_node";

            public minie.irpc.cm_node_rpc end_get_cm_node(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_cm_node_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.cm_node_rpc ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    IceInternal.ParamPatcher<minie.irpc.cm_node_rpc> ret__PP = new IceInternal.ParamPatcher<minie.irpc.cm_node_rpc>(minie.irpc.cm_node_rpc.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_cm_node> begin_get_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_cm_node_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_cm_node> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_cm_node>(__get_cm_node_name, get_cm_node_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_cm_node_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(nodeID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_cm_node_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_cm_node cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.cm_node_rpc ret__;
                try
                {
                    ret__ = end_get_cm_node(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_current_user_info> begin_get_current_user_info()
            {
                return begin_get_current_user_info(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_current_user_info> begin_get_current_user_info(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_current_user_info(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_current_user_info(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_current_user_info(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_current_user_info(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_current_user_info(ctx__, true, false, cb__, cookie__);
            }

            private const string __get_current_user_info_name = "get_current_user_info";

            public minie.irpc.sys_user_rpc end_get_current_user_info(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_current_user_info_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.sys_user_rpc ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    IceInternal.ParamPatcher<minie.irpc.sys_user_rpc> ret__PP = new IceInternal.ParamPatcher<minie.irpc.sys_user_rpc>(minie.irpc.sys_user_rpc.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_current_user_info> begin_get_current_user_info(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_current_user_info_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_current_user_info> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_current_user_info>(__get_current_user_info_name, get_current_user_info_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_current_user_info_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_current_user_info_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_current_user_info cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.sys_user_rpc ret__;
                try
                {
                    ret__ = end_get_current_user_info(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_groups> begin_get_groups()
            {
                return begin_get_groups(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_groups> begin_get_groups(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_groups(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_groups(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_groups(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_groups(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_groups(ctx__, true, false, cb__, cookie__);
            }

            private const string __get_groups_name = "get_groups";

            public _System.Collections.Generic.List<minie.irpc.sys_group_rpc> end_get_groups(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_groups_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    _System.Collections.Generic.List<minie.irpc.sys_group_rpc> ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.sys_group_rpc_listHelper.read(is__);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_groups> begin_get_groups(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_groups_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_groups> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_groups>(__get_groups_name, get_groups_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_groups_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_groups_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_groups cb__, Ice.ExceptionCallback excb__)
            {
                _System.Collections.Generic.List<minie.irpc.sys_group_rpc> ret__;
                try
                {
                    ret__ = end_get_groups(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_node_categories> begin_get_node_categories()
            {
                return begin_get_node_categories(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_node_categories> begin_get_node_categories(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_node_categories(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_node_categories(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_node_categories(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_node_categories(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_node_categories(ctx__, true, false, cb__, cookie__);
            }

            private const string __get_node_categories_name = "get_node_categories";

            public _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> end_get_node_categories(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_node_categories_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.cm_node_category_rpc_listHelper.read(is__);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_node_categories> begin_get_node_categories(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_node_categories_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_node_categories> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_node_categories>(__get_node_categories_name, get_node_categories_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_node_categories_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_node_categories_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_node_categories cb__, Ice.ExceptionCallback excb__)
            {
                _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> ret__;
                try
                {
                    ret__ = end_get_node_categories(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_nodes> begin_get_nodes()
            {
                return begin_get_nodes(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_nodes> begin_get_nodes(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_nodes(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_nodes(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_nodes(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_nodes(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_nodes(ctx__, true, false, cb__, cookie__);
            }

            private const string __get_nodes_name = "get_nodes";

            public _System.Collections.Generic.List<minie.irpc.cm_node_rpc> end_get_nodes(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_nodes_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    _System.Collections.Generic.List<minie.irpc.cm_node_rpc> ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.cm_node_rpc_listHelper.read(is__);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_nodes> begin_get_nodes(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_nodes_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_nodes> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_nodes>(__get_nodes_name, get_nodes_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_nodes_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_nodes_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_nodes cb__, Ice.ExceptionCallback excb__)
            {
                _System.Collections.Generic.List<minie.irpc.cm_node_rpc> ret__;
                try
                {
                    ret__ = end_get_nodes(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_permissions> begin_get_permissions()
            {
                return begin_get_permissions(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_permissions> begin_get_permissions(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_permissions(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_permissions(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_permissions(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_permissions(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_permissions(ctx__, true, false, cb__, cookie__);
            }

            private const string __get_permissions_name = "get_permissions";

            public _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> end_get_permissions(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_permissions_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.sys_permission_rpc_listHelper.read(is__);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_permissions> begin_get_permissions(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_permissions_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_permissions> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_permissions>(__get_permissions_name, get_permissions_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_permissions_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_permissions_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_permissions cb__, Ice.ExceptionCallback excb__)
            {
                _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> ret__;
                try
                {
                    ret__ = end_get_permissions(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_roles> begin_get_roles()
            {
                return begin_get_roles(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_roles> begin_get_roles(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_roles(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_roles(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_roles(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_roles(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_roles(ctx__, true, false, cb__, cookie__);
            }

            private const string __get_roles_name = "get_roles";

            public _System.Collections.Generic.List<minie.irpc.sys_role_rpc> end_get_roles(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_roles_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    _System.Collections.Generic.List<minie.irpc.sys_role_rpc> ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = minie.irpc.sys_role_rpc_listHelper.read(is__);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_roles> begin_get_roles(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_roles_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_roles> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_roles>(__get_roles_name, get_roles_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_roles_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_roles_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_roles cb__, Ice.ExceptionCallback excb__)
            {
                _System.Collections.Generic.List<minie.irpc.sys_role_rpc> ret__;
                try
                {
                    ret__ = end_get_roles(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_group> begin_get_sys_group(string groupID)
            {
                return begin_get_sys_group(groupID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_group> begin_get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_sys_group(groupID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_sys_group(string groupID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_sys_group(groupID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_sys_group(groupID, ctx__, true, false, cb__, cookie__);
            }

            private const string __get_sys_group_name = "get_sys_group";

            public minie.irpc.sys_group_rpc end_get_sys_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_sys_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.sys_group_rpc ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    IceInternal.ParamPatcher<minie.irpc.sys_group_rpc> ret__PP = new IceInternal.ParamPatcher<minie.irpc.sys_group_rpc>(minie.irpc.sys_group_rpc.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_group> begin_get_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_sys_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_sys_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_sys_group>(__get_sys_group_name, get_sys_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_sys_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(groupID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_sys_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_sys_group cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.sys_group_rpc ret__;
                try
                {
                    ret__ = end_get_sys_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_user> begin_get_sys_user(string userID)
            {
                return begin_get_sys_user(userID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_user> begin_get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_get_sys_user(userID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_get_sys_user(string userID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_sys_user(userID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_get_sys_user(userID, ctx__, true, false, cb__, cookie__);
            }

            private const string __get_sys_user_name = "get_sys_user";

            public minie.irpc.sys_user_rpc end_get_sys_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __get_sys_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.sys_user_rpc ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    IceInternal.ParamPatcher<minie.irpc.sys_user_rpc> ret__PP = new IceInternal.ParamPatcher<minie.irpc.sys_user_rpc>(minie.irpc.sys_user_rpc.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_get_sys_user> begin_get_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__get_sys_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_sys_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_get_sys_user>(__get_sys_user_name, get_sys_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__get_sys_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(userID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void get_sys_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_get_sys_user cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.sys_user_rpc ret__;
                try
                {
                    ret__ = end_get_sys_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step1> begin_register_app_user_step1(string cellphone)
            {
                return begin_register_app_user_step1(cellphone, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step1> begin_register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_register_app_user_step1(cellphone, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_register_app_user_step1(string cellphone, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_register_app_user_step1(cellphone, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_register_app_user_step1(cellphone, ctx__, true, false, cb__, cookie__);
            }

            private const string __register_app_user_step1_name = "register_app_user_step1";

            public bool end_register_app_user_step1(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __register_app_user_step1_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    bool ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readBool();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step1> begin_register_app_user_step1(string cellphone, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__register_app_user_step1_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_register_app_user_step1> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_register_app_user_step1>(__register_app_user_step1_name, register_app_user_step1_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__register_app_user_step1_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(cellphone);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void register_app_user_step1_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_register_app_user_step1 cb__, Ice.ExceptionCallback excb__)
            {
                bool ret__;
                try
                {
                    ret__ = end_register_app_user_step1(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step2> begin_register_app_user_step2(string cellphone, string password, int verifyCode)
            {
                return begin_register_app_user_step2(cellphone, password, verifyCode, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step2> begin_register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_register_app_user_step2(cellphone, password, verifyCode, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_register_app_user_step2(string cellphone, string password, int verifyCode, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_register_app_user_step2(cellphone, password, verifyCode, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_register_app_user_step2(cellphone, password, verifyCode, ctx__, true, false, cb__, cookie__);
            }

            private const string __register_app_user_step2_name = "register_app_user_step2";

            public minie.irpc.cm_user_rpc end_register_app_user_step2(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __register_app_user_step2_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(minie.irpc.VerificationError)
                        {
                            throw;
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    minie.irpc.cm_user_rpc ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    IceInternal.ParamPatcher<minie.irpc.cm_user_rpc> ret__PP = new IceInternal.ParamPatcher<minie.irpc.cm_user_rpc>(minie.irpc.cm_user_rpc.ice_staticId());
                    is__.readObject(ret__PP);
                    is__.readPendingObjects();
                    outAsync__.endReadParams();
                    ret__ = ret__PP.value;
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_register_app_user_step2> begin_register_app_user_step2(string cellphone, string password, int verifyCode, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__register_app_user_step2_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_register_app_user_step2> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_register_app_user_step2>(__register_app_user_step2_name, register_app_user_step2_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__register_app_user_step2_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(cellphone);
                    os__.writeString(password);
                    os__.writeInt(verifyCode);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void register_app_user_step2_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_register_app_user_step2 cb__, Ice.ExceptionCallback excb__)
            {
                minie.irpc.cm_user_rpc ret__;
                try
                {
                    ret__ = end_register_app_user_step2(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_entrance> begin_remove_cm_entrance(string entranceID)
            {
                return begin_remove_cm_entrance(entranceID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_entrance> begin_remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_cm_entrance(entranceID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_cm_entrance(string entranceID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_cm_entrance(entranceID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_cm_entrance(entranceID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_cm_entrance_name = "remove_cm_entrance";

            public int end_remove_cm_entrance(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_cm_entrance_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_entrance> begin_remove_cm_entrance(string entranceID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_cm_entrance_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_cm_entrance> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_cm_entrance>(__remove_cm_entrance_name, remove_cm_entrance_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_cm_entrance_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(entranceID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_cm_entrance_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_cm_entrance cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_cm_entrance(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_node> begin_remove_cm_node(string nodeID)
            {
                return begin_remove_cm_node(nodeID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_node> begin_remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_cm_node(nodeID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_cm_node(string nodeID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_cm_node(nodeID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_cm_node(nodeID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_cm_node_name = "remove_cm_node";

            public int end_remove_cm_node(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_cm_node_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_cm_node> begin_remove_cm_node(string nodeID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_cm_node_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_cm_node> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_cm_node>(__remove_cm_node_name, remove_cm_node_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_cm_node_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(nodeID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_cm_node_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_cm_node cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_cm_node(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_group> begin_remove_role_group(string groupID, string roleID)
            {
                return begin_remove_role_group(groupID, roleID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_group> begin_remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_role_group(groupID, roleID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_role_group(string groupID, string roleID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_role_group(groupID, roleID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_role_group(groupID, roleID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_role_group_name = "remove_role_group";

            public int end_remove_role_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_role_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_group> begin_remove_role_group(string groupID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_role_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_role_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_role_group>(__remove_role_group_name, remove_role_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_role_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(groupID);
                    os__.writeString(roleID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_role_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_role_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_role_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_user> begin_remove_role_user(string userID, string roleID)
            {
                return begin_remove_role_user(userID, roleID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_user> begin_remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_role_user(userID, roleID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_role_user(string userID, string roleID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_role_user(userID, roleID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_role_user(userID, roleID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_role_user_name = "remove_role_user";

            public int end_remove_role_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_role_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_role_user> begin_remove_role_user(string userID, string roleID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_role_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_role_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_role_user>(__remove_role_user_name, remove_role_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_role_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(userID);
                    os__.writeString(roleID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_role_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_role_user cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_role_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_group> begin_remove_sys_group(string groupID)
            {
                return begin_remove_sys_group(groupID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_group> begin_remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_sys_group(groupID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_sys_group(string groupID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_sys_group(groupID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_sys_group(groupID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_sys_group_name = "remove_sys_group";

            public int end_remove_sys_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_sys_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_group> begin_remove_sys_group(string groupID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_sys_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_sys_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_sys_group>(__remove_sys_group_name, remove_sys_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_sys_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(groupID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_sys_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_sys_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_sys_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_user> begin_remove_sys_user(string userID)
            {
                return begin_remove_sys_user(userID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_user> begin_remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_sys_user(userID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_sys_user(string userID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_sys_user(userID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_sys_user(userID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_sys_user_name = "remove_sys_user";

            public int end_remove_sys_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_sys_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_sys_user> begin_remove_sys_user(string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_sys_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_sys_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_sys_user>(__remove_sys_user_name, remove_sys_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_sys_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(userID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_sys_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_sys_user cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_sys_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_user_group> begin_remove_user_group(string groupID, string userID)
            {
                return begin_remove_user_group(groupID, userID, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_user_group> begin_remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_remove_user_group(groupID, userID, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_remove_user_group(string groupID, string userID, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_user_group(groupID, userID, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_remove_user_group(groupID, userID, ctx__, true, false, cb__, cookie__);
            }

            private const string __remove_user_group_name = "remove_user_group";

            public int end_remove_user_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __remove_user_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_remove_user_group> begin_remove_user_group(string groupID, string userID, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__remove_user_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_user_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_remove_user_group>(__remove_user_group_name, remove_user_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__remove_user_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeString(groupID);
                    os__.writeString(userID);
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void remove_user_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_remove_user_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_remove_user_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_entrance> begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance)
            {
                return begin_update_cm_entrance(entrance, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_entrance> begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_update_cm_entrance(entrance, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_cm_entrance(entrance, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_cm_entrance(entrance, ctx__, true, false, cb__, cookie__);
            }

            private const string __update_cm_entrance_name = "update_cm_entrance";

            public int end_update_cm_entrance(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __update_cm_entrance_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_entrance> begin_update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__update_cm_entrance_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_cm_entrance> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_cm_entrance>(__update_cm_entrance_name, update_cm_entrance_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__update_cm_entrance_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(entrance);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void update_cm_entrance_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_update_cm_entrance cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_update_cm_entrance(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_node> begin_update_cm_node(minie.irpc.cm_node_rpc node)
            {
                return begin_update_cm_node(node, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_node> begin_update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_update_cm_node(node, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_update_cm_node(minie.irpc.cm_node_rpc node, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_cm_node(node, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_cm_node(node, ctx__, true, false, cb__, cookie__);
            }

            private const string __update_cm_node_name = "update_cm_node";

            public int end_update_cm_node(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __update_cm_node_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_update_cm_node> begin_update_cm_node(minie.irpc.cm_node_rpc node, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__update_cm_node_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_cm_node> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_cm_node>(__update_cm_node_name, update_cm_node_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__update_cm_node_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(node);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void update_cm_node_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_update_cm_node cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_update_cm_node(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_group> begin_update_sys_group(minie.irpc.sys_group_rpc group)
            {
                return begin_update_sys_group(group, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_group> begin_update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_update_sys_group(group, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_update_sys_group(minie.irpc.sys_group_rpc group, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_sys_group(group, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_sys_group(group, ctx__, true, false, cb__, cookie__);
            }

            private const string __update_sys_group_name = "update_sys_group";

            public int end_update_sys_group(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __update_sys_group_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_group> begin_update_sys_group(minie.irpc.sys_group_rpc group, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__update_sys_group_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_sys_group> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_sys_group>(__update_sys_group_name, update_sys_group_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__update_sys_group_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(group);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void update_sys_group_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_update_sys_group cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_update_sys_group(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_user> begin_update_sys_user(minie.irpc.sys_user_rpc user)
            {
                return begin_update_sys_user(user, null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_user> begin_update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_update_sys_user(user, ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_update_sys_user(minie.irpc.sys_user_rpc user, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_sys_user(user, null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_update_sys_user(user, ctx__, true, false, cb__, cookie__);
            }

            private const string __update_sys_user_name = "update_sys_user";

            public int end_update_sys_user(Ice.AsyncResult r__)
            {
                IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __update_sys_user_name);
                try
                {
                    if(!outAsync__.wait())
                    {
                        try
                        {
                            outAsync__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    int ret__;
                    IceInternal.BasicStream is__ = outAsync__.startReadParams();
                    ret__ = is__.readInt();
                    outAsync__.endReadParams();
                    return ret__;
                }
                finally
                {
                    outAsync__.cacheMessageBuffers();
                }
            }

            private Ice.AsyncResult<minie.irpc.Callback_BackendService_update_sys_user> begin_update_sys_user(minie.irpc.sys_user_rpc user, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                checkAsyncTwowayOnly__(__update_sys_user_name);
                IceInternal.TwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_sys_user> result__ =  getTwowayOutgoingAsync<minie.irpc.Callback_BackendService_update_sys_user>(__update_sys_user_name, update_sys_user_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__update_sys_user_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeObject(user);
                    os__.writePendingObjects();
                    result__.endWriteParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void update_sys_user_completed__(Ice.AsyncResult r__, minie.irpc.Callback_BackendService_update_sys_user cb__, Ice.ExceptionCallback excb__)
            {
                int ret__;
                try
                {
                    ret__ = end_update_sys_user(r__);
                }
                catch(Ice.Exception ex__)
                {
                    if(excb__ != null)
                    {
                        excb__(ex__);
                    }
                    return;
                }
                if(cb__ != null)
                {
                    cb__(ret__);
                }
            }

            public Ice.AsyncResult<minie.irpc.Callback_BaseService_logout> begin_logout()
            {
                return begin_logout(null, false, false, null, null);
            }

            public Ice.AsyncResult<minie.irpc.Callback_BaseService_logout> begin_logout(_System.Collections.Generic.Dictionary<string, string> ctx__)
            {
                return begin_logout(ctx__, true, false, null, null);
            }

            public Ice.AsyncResult begin_logout(Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_logout(null, false, false, cb__, cookie__);
            }

            public Ice.AsyncResult begin_logout(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
            {
                return begin_logout(ctx__, true, false, cb__, cookie__);
            }

            private const string __logout_name = "logout";

            public void end_logout(Ice.AsyncResult r__)
            {
                end__(r__, __logout_name);
            }

            private Ice.AsyncResult<minie.irpc.Callback_BaseService_logout> begin_logout(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
            {
                IceInternal.OnewayOutgoingAsync<minie.irpc.Callback_BaseService_logout> result__ = getOnewayOutgoingAsync<minie.irpc.Callback_BaseService_logout>(__logout_name, logout_completed__, cookie__);
                if(cb__ != null)
                {
                    result__.whenCompletedWithAsyncCallback(cb__);
                }
                try
                {
                    result__.prepare(__logout_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                    result__.writeEmptyParams();
                    result__.invoke();
                }
                catch(Ice.Exception ex__)
                {
                    result__.abort(ex__);
                }
                return result__;
            }

            private void logout_completed__(minie.irpc.Callback_BaseService_logout cb__)
            {
                if(cb__ != null)
                {
                    cb__();
                }
            }

            #endregion

            #region Checked and unchecked cast operations

            public static BackendServicePrx checkedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                BackendServicePrx r = b as BackendServicePrx;
                if((r == null) && b.ice_isA(ice_staticId()))
                {
                    BackendServicePrxHelper h = new BackendServicePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static BackendServicePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                BackendServicePrx r = b as BackendServicePrx;
                if((r == null) && b.ice_isA(ice_staticId(), ctx))
                {
                    BackendServicePrxHelper h = new BackendServicePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static BackendServicePrx checkedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId()))
                    {
                        BackendServicePrxHelper h = new BackendServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static BackendServicePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                try
                {
                    if(bb.ice_isA(ice_staticId(), ctx))
                    {
                        BackendServicePrxHelper h = new BackendServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }
                }
                catch(Ice.FacetNotExistException)
                {
                }
                return null;
            }

            public static BackendServicePrx uncheckedCast(Ice.ObjectPrx b)
            {
                if(b == null)
                {
                    return null;
                }
                BackendServicePrx r = b as BackendServicePrx;
                if(r == null)
                {
                    BackendServicePrxHelper h = new BackendServicePrxHelper();
                    h.copyFrom__(b);
                    r = h;
                }
                return r;
            }

            public static BackendServicePrx uncheckedCast(Ice.ObjectPrx b, string f)
            {
                if(b == null)
                {
                    return null;
                }
                Ice.ObjectPrx bb = b.ice_facet(f);
                BackendServicePrxHelper h = new BackendServicePrxHelper();
                h.copyFrom__(bb);
                return h;
            }

            public static readonly string[] ids__ =
            {
                "::Ice::Object",
                "::minie::irpc::BackendService",
                "::minie::irpc::BaseService"
            };

            public static string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Marshaling support

            public static void write__(IceInternal.BasicStream os__, BackendServicePrx v__)
            {
                os__.writeProxy(v__);
            }

            public static BackendServicePrx read__(IceInternal.BasicStream is__)
            {
                Ice.ObjectPrx proxy = is__.readProxy();
                if(proxy != null)
                {
                    BackendServicePrxHelper result = new BackendServicePrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            public static void write(Ice.OutputStream outS__, BackendServicePrx v__)
            {
                outS__.writeProxy(v__);
            }

            public static BackendServicePrx read(Ice.InputStream inS__)
            {
                Ice.ObjectPrx proxy = inS__.readProxy();
                if(proxy != null)
                {
                    BackendServicePrxHelper result = new BackendServicePrxHelper();
                    result.copyFrom__(proxy);
                    return result;
                }
                return null;
            }

            public static Ice.OptionalFormat optionalFormat()
            {
                return Ice.OptionalFormat.FSize;
            }

            #endregion
        }
    }
}

namespace minie
{
    namespace irpc
    {
        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public abstract class BackendAuthDisp_ : Ice.ObjectImpl, BackendAuth
        {
            #region Slice operations

            public minie.irpc.BackendServicePrx login_backend(string un, string pw)
            {
                return login_backend(un, pw, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.BackendServicePrx login_backend(string un, string pw, Ice.Current current__);

            public minie.irpc.BackendServicePrx login_backend_by_token(string token)
            {
                return login_backend_by_token(token, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.BackendServicePrx login_backend_by_token(string token, Ice.Current current__);

            #endregion

            #region Slice type-related members

            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::minie::irpc::BackendAuth"
            };

            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids()
            {
                return ids__;
            }

            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            public override string ice_id()
            {
                return ids__[1];
            }

            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus login_backend___(BackendAuth obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string un;
                string pw;
                un = is__.readString();
                pw = is__.readString();
                inS__.endReadParams();
                try
                {
                    minie.irpc.BackendServicePrx ret__ = obj__.login_backend(un, pw, current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    minie.irpc.BackendServicePrxHelper.write__(os__, ret__);
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }
                catch(minie.irpc.AuthError ex__)
                {
                    inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                    return Ice.DispatchStatus.DispatchUserException;
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus login_backend_by_token___(BackendAuth obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string token;
                token = is__.readString();
                inS__.endReadParams();
                try
                {
                    minie.irpc.BackendServicePrx ret__ = obj__.login_backend_by_token(token, current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    minie.irpc.BackendServicePrxHelper.write__(os__, ret__);
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }
                catch(minie.irpc.AuthError ex__)
                {
                    inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                    return Ice.DispatchStatus.DispatchUserException;
                }
            }

            private static string[] all__ =
            {
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "login_backend",
                "login_backend_by_token"
            };

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return login_backend___(this, inS__, current__);
                    }
                    case 5:
                    {
                        return login_backend_by_token___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.endWriteSlice();
            }

            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                is__.endReadSlice();
            }

            protected override void writeImpl__(Ice.OutputStream outS__)
            {
                outS__.startSlice(ice_staticId(), -1, true);
                outS__.endSlice();
            }

            protected override void readImpl__(Ice.InputStream inS__)
            {
                inS__.startSlice();
                inS__.endSlice();
            }

            #endregion
        }

        [_System.Runtime.InteropServices.ComVisible(false)]
        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.1")]
        public abstract class BackendServiceDisp_ : Ice.ObjectImpl, BackendService
        {
            #region Slice operations

            public minie.irpc.sys_user_rpc get_current_user_info()
            {
                return get_current_user_info(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.sys_user_rpc get_current_user_info(Ice.Current current__);

            public _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups()
            {
                return get_groups(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract _System.Collections.Generic.List<minie.irpc.sys_group_rpc> get_groups(Ice.Current current__);

            public _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes()
            {
                return get_nodes(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract _System.Collections.Generic.List<minie.irpc.cm_node_rpc> get_nodes(Ice.Current current__);

            public _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories()
            {
                return get_node_categories(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> get_node_categories(Ice.Current current__);

            public _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles()
            {
                return get_roles(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract _System.Collections.Generic.List<minie.irpc.sys_role_rpc> get_roles(Ice.Current current__);

            public _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions()
            {
                return get_permissions(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> get_permissions(Ice.Current current__);

            public _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords)
            {
                return find_app_user(keywords, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract _System.Collections.Generic.List<minie.irpc.cm_user_rpc> find_app_user(string keywords, Ice.Current current__);

            public bool register_app_user_step1(string cellphone)
            {
                return register_app_user_step1(cellphone, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract bool register_app_user_step1(string cellphone, Ice.Current current__);

            public minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode)
            {
                return register_app_user_step2(cellphone, password, verifyCode, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.cm_user_rpc register_app_user_step2(string cellphone, string password, int verifyCode, Ice.Current current__);

            public int add_user_group(string groupID, string userID)
            {
                return add_user_group(groupID, userID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_user_group(string groupID, string userID, Ice.Current current__);

            public int add_role_group(string groupID, string roleID)
            {
                return add_role_group(groupID, roleID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_role_group(string groupID, string roleID, Ice.Current current__);

            public int add_role_user(string userID, string roleID)
            {
                return add_role_user(userID, roleID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_role_user(string userID, string roleID, Ice.Current current__);

            public int remove_user_group(string groupID, string userID)
            {
                return remove_user_group(groupID, userID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_user_group(string groupID, string userID, Ice.Current current__);

            public int remove_role_group(string groupID, string roleID)
            {
                return remove_role_group(groupID, roleID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_role_group(string groupID, string roleID, Ice.Current current__);

            public int remove_role_user(string userID, string roleID)
            {
                return remove_role_user(userID, roleID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_role_user(string userID, string roleID, Ice.Current current__);

            public int add_sys_group(minie.irpc.sys_group_rpc group)
            {
                return add_sys_group(group, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_sys_group(minie.irpc.sys_group_rpc group, Ice.Current current__);

            public int add_sys_user(minie.irpc.sys_user_rpc user)
            {
                return add_sys_user(user, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_sys_user(minie.irpc.sys_user_rpc user, Ice.Current current__);

            public int add_cm_node(minie.irpc.cm_node_rpc node)
            {
                return add_cm_node(node, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_cm_node(minie.irpc.cm_node_rpc node, Ice.Current current__);

            public int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance)
            {
                return add_cm_entrance(entrance, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int add_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.Current current__);

            public int update_sys_group(minie.irpc.sys_group_rpc group)
            {
                return update_sys_group(group, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int update_sys_group(minie.irpc.sys_group_rpc group, Ice.Current current__);

            public int update_sys_user(minie.irpc.sys_user_rpc user)
            {
                return update_sys_user(user, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int update_sys_user(minie.irpc.sys_user_rpc user, Ice.Current current__);

            public int update_cm_node(minie.irpc.cm_node_rpc node)
            {
                return update_cm_node(node, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int update_cm_node(minie.irpc.cm_node_rpc node, Ice.Current current__);

            public int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance)
            {
                return update_cm_entrance(entrance, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int update_cm_entrance(minie.irpc.cm_entrance_rpc entrance, Ice.Current current__);

            public minie.irpc.sys_group_rpc get_sys_group(string groupID)
            {
                return get_sys_group(groupID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.sys_group_rpc get_sys_group(string groupID, Ice.Current current__);

            public minie.irpc.sys_user_rpc get_sys_user(string userID)
            {
                return get_sys_user(userID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.sys_user_rpc get_sys_user(string userID, Ice.Current current__);

            public minie.irpc.cm_node_rpc get_cm_node(string nodeID)
            {
                return get_cm_node(nodeID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.cm_node_rpc get_cm_node(string nodeID, Ice.Current current__);

            public minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID)
            {
                return get_cm_entrance(entranceID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract minie.irpc.cm_entrance_rpc get_cm_entrance(string entranceID, Ice.Current current__);

            public int remove_sys_group(string groupID)
            {
                return remove_sys_group(groupID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_sys_group(string groupID, Ice.Current current__);

            public int remove_sys_user(string userID)
            {
                return remove_sys_user(userID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_sys_user(string userID, Ice.Current current__);

            public int remove_cm_node(string nodeID)
            {
                return remove_cm_node(nodeID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_cm_node(string nodeID, Ice.Current current__);

            public int remove_cm_entrance(string entranceID)
            {
                return remove_cm_entrance(entranceID, Ice.ObjectImpl.defaultCurrent);
            }

            public abstract int remove_cm_entrance(string entranceID, Ice.Current current__);

            #endregion

            #region Inherited Slice operations

            public void logout()
            {
                logout(Ice.ObjectImpl.defaultCurrent);
            }

            public abstract void logout(Ice.Current current__);

            #endregion

            #region Slice type-related members

            public static new readonly string[] ids__ = 
            {
                "::Ice::Object",
                "::minie::irpc::BackendService",
                "::minie::irpc::BaseService"
            };

            public override bool ice_isA(string s)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override bool ice_isA(string s, Ice.Current current__)
            {
                return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
            }

            public override string[] ice_ids()
            {
                return ids__;
            }

            public override string[] ice_ids(Ice.Current current__)
            {
                return ids__;
            }

            public override string ice_id()
            {
                return ids__[1];
            }

            public override string ice_id(Ice.Current current__)
            {
                return ids__[1];
            }

            public static new string ice_staticId()
            {
                return ids__[1];
            }

            #endregion

            #region Operation dispatch

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_current_user_info___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.readEmptyParams();
                minie.irpc.sys_user_rpc ret__ = obj__.get_current_user_info(current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeObject(ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_groups___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.readEmptyParams();
                _System.Collections.Generic.List<minie.irpc.sys_group_rpc> ret__ = obj__.get_groups(current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                minie.irpc.sys_group_rpc_listHelper.write(os__, ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_nodes___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.readEmptyParams();
                _System.Collections.Generic.List<minie.irpc.cm_node_rpc> ret__ = obj__.get_nodes(current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                minie.irpc.cm_node_rpc_listHelper.write(os__, ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_node_categories___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.readEmptyParams();
                _System.Collections.Generic.List<minie.irpc.cm_node_category_rpc> ret__ = obj__.get_node_categories(current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                minie.irpc.cm_node_category_rpc_listHelper.write(os__, ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_roles___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.readEmptyParams();
                _System.Collections.Generic.List<minie.irpc.sys_role_rpc> ret__ = obj__.get_roles(current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                minie.irpc.sys_role_rpc_listHelper.write(os__, ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_permissions___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                inS__.readEmptyParams();
                _System.Collections.Generic.List<minie.irpc.sys_permission_rpc> ret__ = obj__.get_permissions(current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                minie.irpc.sys_permission_rpc_listHelper.write(os__, ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus find_app_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string keywords;
                keywords = is__.readString();
                inS__.endReadParams();
                _System.Collections.Generic.List<minie.irpc.cm_user_rpc> ret__ = obj__.find_app_user(keywords, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                minie.irpc.cm_user_rpc_listHelper.write(os__, ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus register_app_user_step1___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string cellphone;
                cellphone = is__.readString();
                inS__.endReadParams();
                bool ret__ = obj__.register_app_user_step1(cellphone, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeBool(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus register_app_user_step2___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string cellphone;
                string password;
                int verifyCode;
                cellphone = is__.readString();
                password = is__.readString();
                verifyCode = is__.readInt();
                inS__.endReadParams();
                try
                {
                    minie.irpc.cm_user_rpc ret__ = obj__.register_app_user_step2(cellphone, password, verifyCode, current__);
                    IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                    os__.writeObject(ret__);
                    os__.writePendingObjects();
                    inS__.endWriteParams__(true);
                    return Ice.DispatchStatus.DispatchOK;
                }
                catch(minie.irpc.VerificationError ex__)
                {
                    inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                    return Ice.DispatchStatus.DispatchUserException;
                }
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_user_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string groupID;
                string userID;
                groupID = is__.readString();
                userID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.add_user_group(groupID, userID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_role_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string groupID;
                string roleID;
                groupID = is__.readString();
                roleID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.add_role_group(groupID, roleID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_role_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string userID;
                string roleID;
                userID = is__.readString();
                roleID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.add_role_user(userID, roleID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_user_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string groupID;
                string userID;
                groupID = is__.readString();
                userID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_user_group(groupID, userID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_role_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string groupID;
                string roleID;
                groupID = is__.readString();
                roleID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_role_group(groupID, roleID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_role_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string userID;
                string roleID;
                userID = is__.readString();
                roleID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_role_user(userID, roleID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_sys_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.sys_group_rpc> group__PP = new IceInternal.ParamPatcher<minie.irpc.sys_group_rpc>(minie.irpc.sys_group_rpc.ice_staticId());
                is__.readObject(group__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.add_sys_group(group__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_sys_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.sys_user_rpc> user__PP = new IceInternal.ParamPatcher<minie.irpc.sys_user_rpc>(minie.irpc.sys_user_rpc.ice_staticId());
                is__.readObject(user__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.add_sys_user(user__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_cm_node___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.cm_node_rpc> node__PP = new IceInternal.ParamPatcher<minie.irpc.cm_node_rpc>(minie.irpc.cm_node_rpc.ice_staticId());
                is__.readObject(node__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.add_cm_node(node__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus add_cm_entrance___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.cm_entrance_rpc> entrance__PP = new IceInternal.ParamPatcher<minie.irpc.cm_entrance_rpc>(minie.irpc.cm_entrance_rpc.ice_staticId());
                is__.readObject(entrance__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.add_cm_entrance(entrance__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus update_sys_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.sys_group_rpc> group__PP = new IceInternal.ParamPatcher<minie.irpc.sys_group_rpc>(minie.irpc.sys_group_rpc.ice_staticId());
                is__.readObject(group__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.update_sys_group(group__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus update_sys_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.sys_user_rpc> user__PP = new IceInternal.ParamPatcher<minie.irpc.sys_user_rpc>(minie.irpc.sys_user_rpc.ice_staticId());
                is__.readObject(user__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.update_sys_user(user__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus update_cm_node___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.cm_node_rpc> node__PP = new IceInternal.ParamPatcher<minie.irpc.cm_node_rpc>(minie.irpc.cm_node_rpc.ice_staticId());
                is__.readObject(node__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.update_cm_node(node__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus update_cm_entrance___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                IceInternal.ParamPatcher<minie.irpc.cm_entrance_rpc> entrance__PP = new IceInternal.ParamPatcher<minie.irpc.cm_entrance_rpc>(minie.irpc.cm_entrance_rpc.ice_staticId());
                is__.readObject(entrance__PP);
                is__.readPendingObjects();
                inS__.endReadParams();
                int ret__ = obj__.update_cm_entrance(entrance__PP.value, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_sys_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string groupID;
                groupID = is__.readString();
                inS__.endReadParams();
                minie.irpc.sys_group_rpc ret__ = obj__.get_sys_group(groupID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeObject(ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_sys_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string userID;
                userID = is__.readString();
                inS__.endReadParams();
                minie.irpc.sys_user_rpc ret__ = obj__.get_sys_user(userID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeObject(ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_cm_node___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string nodeID;
                nodeID = is__.readString();
                inS__.endReadParams();
                minie.irpc.cm_node_rpc ret__ = obj__.get_cm_node(nodeID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeObject(ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus get_cm_entrance___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string entranceID;
                entranceID = is__.readString();
                inS__.endReadParams();
                minie.irpc.cm_entrance_rpc ret__ = obj__.get_cm_entrance(entranceID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeObject(ret__);
                os__.writePendingObjects();
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_sys_group___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string groupID;
                groupID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_sys_group(groupID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_sys_user___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string userID;
                userID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_sys_user(userID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_cm_node___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string nodeID;
                nodeID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_cm_node(nodeID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
            public static Ice.DispatchStatus remove_cm_entrance___(BackendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
            {
                Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                IceInternal.BasicStream is__ = inS__.startReadParams();
                string entranceID;
                entranceID = is__.readString();
                inS__.endReadParams();
                int ret__ = obj__.remove_cm_entrance(entranceID, current__);
                IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeInt(ret__);
                inS__.endWriteParams__(true);
                return Ice.DispatchStatus.DispatchOK;
            }

            private static string[] all__ =
            {
                "add_cm_entrance",
                "add_cm_node",
                "add_role_group",
                "add_role_user",
                "add_sys_group",
                "add_sys_user",
                "add_user_group",
                "find_app_user",
                "get_cm_entrance",
                "get_cm_node",
                "get_current_user_info",
                "get_groups",
                "get_node_categories",
                "get_nodes",
                "get_permissions",
                "get_roles",
                "get_sys_group",
                "get_sys_user",
                "ice_id",
                "ice_ids",
                "ice_isA",
                "ice_ping",
                "logout",
                "register_app_user_step1",
                "register_app_user_step2",
                "remove_cm_entrance",
                "remove_cm_node",
                "remove_role_group",
                "remove_role_user",
                "remove_sys_group",
                "remove_sys_user",
                "remove_user_group",
                "update_cm_entrance",
                "update_cm_node",
                "update_sys_group",
                "update_sys_user"
            };

            public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
            {
                int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                if(pos < 0)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }

                switch(pos)
                {
                    case 0:
                    {
                        return add_cm_entrance___(this, inS__, current__);
                    }
                    case 1:
                    {
                        return add_cm_node___(this, inS__, current__);
                    }
                    case 2:
                    {
                        return add_role_group___(this, inS__, current__);
                    }
                    case 3:
                    {
                        return add_role_user___(this, inS__, current__);
                    }
                    case 4:
                    {
                        return add_sys_group___(this, inS__, current__);
                    }
                    case 5:
                    {
                        return add_sys_user___(this, inS__, current__);
                    }
                    case 6:
                    {
                        return add_user_group___(this, inS__, current__);
                    }
                    case 7:
                    {
                        return find_app_user___(this, inS__, current__);
                    }
                    case 8:
                    {
                        return get_cm_entrance___(this, inS__, current__);
                    }
                    case 9:
                    {
                        return get_cm_node___(this, inS__, current__);
                    }
                    case 10:
                    {
                        return get_current_user_info___(this, inS__, current__);
                    }
                    case 11:
                    {
                        return get_groups___(this, inS__, current__);
                    }
                    case 12:
                    {
                        return get_node_categories___(this, inS__, current__);
                    }
                    case 13:
                    {
                        return get_nodes___(this, inS__, current__);
                    }
                    case 14:
                    {
                        return get_permissions___(this, inS__, current__);
                    }
                    case 15:
                    {
                        return get_roles___(this, inS__, current__);
                    }
                    case 16:
                    {
                        return get_sys_group___(this, inS__, current__);
                    }
                    case 17:
                    {
                        return get_sys_user___(this, inS__, current__);
                    }
                    case 18:
                    {
                        return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                    }
                    case 19:
                    {
                        return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                    }
                    case 20:
                    {
                        return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                    }
                    case 21:
                    {
                        return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                    }
                    case 22:
                    {
                        return minie.irpc.BaseServiceDisp_.logout___(this, inS__, current__);
                    }
                    case 23:
                    {
                        return register_app_user_step1___(this, inS__, current__);
                    }
                    case 24:
                    {
                        return register_app_user_step2___(this, inS__, current__);
                    }
                    case 25:
                    {
                        return remove_cm_entrance___(this, inS__, current__);
                    }
                    case 26:
                    {
                        return remove_cm_node___(this, inS__, current__);
                    }
                    case 27:
                    {
                        return remove_role_group___(this, inS__, current__);
                    }
                    case 28:
                    {
                        return remove_role_user___(this, inS__, current__);
                    }
                    case 29:
                    {
                        return remove_sys_group___(this, inS__, current__);
                    }
                    case 30:
                    {
                        return remove_sys_user___(this, inS__, current__);
                    }
                    case 31:
                    {
                        return remove_user_group___(this, inS__, current__);
                    }
                    case 32:
                    {
                        return update_cm_entrance___(this, inS__, current__);
                    }
                    case 33:
                    {
                        return update_cm_node___(this, inS__, current__);
                    }
                    case 34:
                    {
                        return update_sys_group___(this, inS__, current__);
                    }
                    case 35:
                    {
                        return update_sys_user___(this, inS__, current__);
                    }
                }

                _System.Diagnostics.Debug.Assert(false);
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            #endregion

            #region Marshaling support

            protected override void writeImpl__(IceInternal.BasicStream os__)
            {
                os__.startWriteSlice(ice_staticId(), -1, true);
                os__.endWriteSlice();
            }

            protected override void readImpl__(IceInternal.BasicStream is__)
            {
                is__.startReadSlice();
                is__.endReadSlice();
            }

            protected override void writeImpl__(Ice.OutputStream outS__)
            {
                outS__.startSlice(ice_staticId(), -1, true);
                outS__.endSlice();
            }

            protected override void readImpl__(Ice.InputStream inS__)
            {
                inS__.startSlice();
                inS__.endSlice();
            }

            #endregion
        }
    }
}
